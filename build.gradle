plugins {
    id 'java'
}

group = 'com.verchasel'
version = '1.0.0'

java {
    toolchain { languageVersion = JavaLanguageVersion.of(17) }
}

repositories {
    mavenLocal()
    maven {
        url = 'https://repo.runelite.net'
        content { includeGroupByRegex("net\\.runelite.*") }
    }
    mavenCentral()
}

def runeliteVersion = 'latest.release'

dependencies {
    compileOnly "net.runelite:runelite-api:${runeliteVersion}"
    compileOnly "net.runelite:client:${runeliteVersion}"

    compileOnly "org.projectlombok:lombok:1.18.30"
    annotationProcessor "org.projectlombok:lombok:1.18.30"

    testImplementation "junit:junit:4.13.2"
    testCompileOnly "net.runelite:runelite-api:${runeliteVersion}"
    testCompileOnly "net.runelite:client:${runeliteVersion}"
}

configurations { devRuntime }
dependencies {
    devRuntime "net.runelite:runelite-api:${runeliteVersion}"
    devRuntime "net.runelite:client:${runeliteVersion}"
}

tasks.register('runClient', JavaExec) {
    group = 'run'
    description = 'Launch RuneLite with the SpecSound plugin loaded'
    dependsOn tasks.testClasses
    mainClass = 'com.verchasel.specsound.SpecSoundPluginTest'
    classpath = sourceSets.test.runtimeClasspath + configurations.devRuntime
    jvmArgs '-ea'
}

tasks.withType(Copy).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
tasks.withType(Jar).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    exclude('META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt')
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
